import json
import os
import boto3
import requests
from requests.auth import HTTPBasicAuth

def lambda_handler(event, context):
    # Get environment variables
    api_url = os.environ['API_URL']
    username = os.environ['USERNAME']
    password = os.environ['PASSWORD']
    voucher_type_key = os.environ['VOUCHER_TYPE_KEY']
    
    # Define the payload
    eligible_passengers = event.get('eligiblePassengers', [])
    
    # Prepare the voucher data
    vouchers_data = {
        "voucherType": {
            "href": f"/voucherTypes/{voucher_type_key}",
            "key": voucher_type_key,
            "name": "Late Arrival"
        },
        "generationNumber": 20,
        "password": None,
        "personalIdentificationNumber": None,
        "autoGeneratePersonalIdentificationNumber": {
            "length": 4
        },
        "autoGeneratePassword": {
            "length": 6
        },
        "expiryDate": "2024-12-13T19:06:46Z",  # Set to 30 days from creation
        "available": 20,
        "reason": "Generated via AWS Lambda",
        "eligiblePassengers": eligible_passengers
    }
    
    # Make the API call to generate vouchers
    response = requests.post(api_url, 
                             json=vouchers_data, 
                             auth=HTTPBasicAuth(username, password))
    
    # Handle the response
    if response.status_code == 200:
        return {
            "statusCode": 200,
            "body": json.loads(response.text)
        }
    else:
        return {
            "statusCode": response.status_code,
            "body": response.text
        }
