import json
import urllib3

def lambda_handler(event, context):
    # Extract parameters from the event object
    departure_date = event.get('departureDate', "2024-10-05")
    city_pair = event.get('cityPair', "YYZ-YVR")
    days_after_departure = event.get('daysAfterDeparture', 30)
    passenger_count = event.get('passengerCount', "ADT:1")
    currency = event.get('currency', "CAD")
    
    # API URL
    url = f"https://flairair-api.intelisystraining.ca/RESTv1/travelOptions?daysAfterDeparture={days_after_departure}&passengerCounts={passenger_count}&currency={currency}&departure={departure_date}&cityPair={city_pair}"
    
    # Initialize urllib3 PoolManager
    http = urllib3.PoolManager()
    
    try:
        # Send GET request to the API
        response = http.request('GET', url)
        # Parse the response JSON
        data = json.loads(response.data.decode('utf-8'))
        
        # List to store formatted travel details
        travel_details = []
        for option in data:
            departure_date = option.get('departureDate')
            fare_info = option.get('fareOptions', [{}])[0]  # Get first fare option if exists
            # Extract fare charges
            fare_charges = fare_info.get('fareCharges', [{}])[0]
            cheapest_fare = fare_charges.get('currencyAmounts', [{}])[0].get('totalAmount')
            if departure_date and cheapest_fare:
                # Add each record as a dictionary to the list
                travel_details.append({
                    "departure_date": departure_date,
                    "cheapest_fare": cheapest_fare
                })
        
        # Return the response as a list of dictionaries
        return {
            'statusCode': 200,
            'body': json.dumps(travel_details)
        }
    
    except urllib3.exceptions.HTTPError as e:
        return {
            'statusCode': 500,
            'body': json.dumps({'error': str(e)})
        }
